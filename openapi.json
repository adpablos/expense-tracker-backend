{
  "openapi": "3.0.0",
  "info": {
    "title": "Expense Tracker API",
    "version": "1.0.0",
    "description": "The Expense Tracker API provides endpoints for managing your personal finances. With this API, you can manage expenses, categories, and subcategories, as well as upload receipts and audio logs. A key feature of the API is the use of AI to process uploaded documents (images or audio files) to automatically recognize and log expenses, enhancing the user experience by simplifying data entry."
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the category"
          },
          "name": {
            "type": "string",
            "description": "The name of the category"
          }
        }
      },
      "Subcategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the subcategory"
          },
          "name": {
            "type": "string",
            "description": "The name of the subcategory"
          },
          "categoryId": {
            "type": "string",
            "description": "The ID of the category this subcategory belongs to"
          }
        }
      },
      "Expense": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the expense",
            "example": "1d311a67-3bf8-438b-a296-4e8b730268ae"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the expense",
            "example": "Compra en supermercado"
          },
          "amount": {
            "type": "number",
            "description": "The monetary amount of the expense",
            "example": 75
          },
          "category": {
            "type": "string",
            "description": "The category under which this expense falls",
            "example": "Alimentaci√≥n"
          },
          "subcategory": {
            "type": "string",
            "description": "The subcategory under which this expense falls",
            "example": "Supermercado"
          },
          "expenseDatetime": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the expense was incurred",
            "example": "2024-08-09T13:24:00-04:00"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the expense record was created",
            "example": "2024-08-09T14:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the expense record was last updated",
            "example": "2024-08-09T14:45:00Z"
          }
        },
        "required": [
          "description",
          "amount",
          "category",
          "expenseDatetime"
        ]
      }
    }
  },
  "paths": {
    "/api/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Retrieve all categories",
        "description": "Fetch a comprehensive list of all available expense categories.",
        "responses": {
          "200": {
            "description": "A list of categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "description": "Add a new category to organize your expenses. Each category must have a unique name.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the category."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The category was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update an existing category",
        "description": "Modify the details of an existing category by its ID. Only the name of the category can be changed.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the category."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name of the category."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The category was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "The category with the specified ID was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category",
        "description": "Remove an existing category by its ID. Note that this action cannot be undone.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the category."
          }
        ],
        "responses": {
          "204": {
            "description": "The category was successfully deleted."
          },
          "404": {
            "description": "The category with the specified ID was not found."
          }
        }
      }
    },
    "/api/expenses": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Retrieve all expenses",
        "description": "Get a detailed list of all recorded expenses, with optional filters and pagination.",
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-08-09T00:00:00Z"
            },
            "description": "The start date to filter expenses (ISO 8601 format)."
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-08-09T23:59:59Z"
            },
            "description": "The end date to filter expenses (ISO 8601 format)."
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "description": "Filter by category."
          },
          {
            "in": "query",
            "name": "subcategory",
            "schema": {
              "type": "string"
            },
            "description": "Filter by subcategory."
          },
          {
            "in": "query",
            "name": "amount",
            "schema": {
              "type": "number"
            },
            "description": "Filter by amount."
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            },
            "description": "Filter by description (partial match)."
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "The page number for pagination (must be a positive integer)."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "The number of expenses per page (must be a positive integer)."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of expenses with pagination details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "The current page number."
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "The total number of pages."
                    },
                    "nextPage": {
                      "type": "integer",
                      "nullable": true,
                      "description": "The next page number, if available."
                    },
                    "totalItems": {
                      "type": "integer",
                      "description": "The total number of items."
                    },
                    "expenses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Expense"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new expense",
        "description": "Adds a new expense to the system with the given details.",
        "tags": [
          "Expenses"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "Compra en supermercado"
                  },
                  "amount": {
                    "type": "number",
                    "example": 75
                  },
                  "category": {
                    "type": "string",
                    "example": "Alimentaci√≥n"
                  },
                  "subcategory": {
                    "type": "string",
                    "example": "Supermercado"
                  },
                  "expenseDatetime": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-08-09T13:24:00-04:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Expense created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "category": {
                      "type": "string"
                    },
                    "subcategory": {
                      "type": "string"
                    },
                    "expenseDatetime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid expense datetime format. Please provide the datetime in ISO 8601 format, such as '2024-08-09T14:30:00Z' or '2024-08-09T14:30:00-04:00'."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating expense"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/{id}": {
      "put": {
        "summary": "Update an existing expense",
        "description": "Updates the details of an existing expense by its ID.",
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique ID of the expense to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "Compra en supermercado"
                  },
                  "amount": {
                    "type": "number",
                    "example": 75
                  },
                  "category": {
                    "type": "string",
                    "example": "Alimentaci√≥n"
                  },
                  "subcategory": {
                    "type": "string",
                    "example": "Supermercado"
                  },
                  "expense_datetime": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-08-09T13:24:00-04:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Expense updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "category": {
                      "type": "string"
                    },
                    "subcategory": {
                      "type": "string"
                    },
                    "expense_datetime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid expense datetime format. Please provide the datetime in ISO 8601 format, such as '2024-08-09T14:30:00Z' or '2024-08-09T14:30:00-04:00'."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Expense not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Expense not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error updating expense"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Expenses"
        ],
        "summary": "Delete an expense",
        "description": "Remove an existing expense by its ID. Note that this action cannot be undone.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the expense."
          }
        ],
        "responses": {
          "204": {
            "description": "The expense was successfully deleted."
          },
          "404": {
            "description": "The expense with the specified ID was not found."
          }
        }
      }
    },
    "/api/expenses/upload": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Upload an expense file (image or audio) to log an expense using AI",
        "description": "Upload an image or audio file to create a new expense entry. The file should be either an image (jpeg, jpg, png, webp, gif) or audio (flac, m4a, mp3, mp4, mpeg, mpga, oga, ogg, wav, webm). The AI processes the uploaded file to automatically recognize and log the expense details, making data entry quick and effortless.",
        "consumes": [
          "multipart/form-data"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The image or audio file to upload.",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The expense was successfully logged by the AI.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Expense logged successfully by AI."
                    },
                    "expense": {
                      "$ref": "#/components/schemas/Expense"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No file uploaded or unsupported file type."
          },
          "500": {
            "description": "Error processing the file."
          }
        }
      }
    },
    "/api/subcategories": {
      "get": {
        "tags": [
          "Subcategories"
        ],
        "summary": "Retrieve all subcategories",
        "description": "Fetch a comprehensive list of all available expense subcategories.",
        "responses": {
          "200": {
            "description": "A list of subcategories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subcategory"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subcategories"
        ],
        "summary": "Create a new subcategory",
        "description": "Add a new subcategory to organize your expenses under a specific category. Each subcategory must have a unique name and a valid category ID.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "categoryId"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the subcategory."
                  },
                  "categoryId": {
                    "type": "string",
                    "description": "The ID of the category this subcategory belongs to."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The subcategory was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/subcategories/{id}": {
      "put": {
        "tags": [
          "Subcategories"
        ],
        "summary": "Update an existing subcategory",
        "description": "Modify the details of an existing subcategory by its ID. Only the name and category ID can be changed.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the subcategory."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name of the subcategory."
                  },
                  "categoryId": {
                    "type": "string",
                    "description": "The ID of the category this subcategory belongs to."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The subcategory was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategory"
                }
              }
            }
          },
          "404": {
            "description": "The subcategory with the specified ID was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Subcategories"
        ],
        "summary": "Delete a subcategory",
        "description": "Remove an existing subcategory by its ID. Note that this action cannot be undone.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the subcategory."
          }
        ],
        "responses": {
          "204": {
            "description": "The subcategory was successfully deleted."
          },
          "404": {
            "description": "The subcategory with the specified ID was not found."
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Categories",
      "description": "API for managing expense categories"
    },
    {
      "name": "Expenses",
      "description": "API for managing expenses"
    },
    {
      "name": "Subcategories",
      "description": "API for managing expense subcategories"
    }
  ]
}